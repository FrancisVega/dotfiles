[user]
	name = Txema Le√≥n
	email = soy@txemaleon.com
	username = txemaleon

[core]
	excludesfile = ~/.gitignore
	pager = less -r

[init]
	defaultBranch = main

[pull]
	ff = true

[push]
	default = current
	autoSetupRemote = true

[merge]
	ff = false

[commit]
	gpgsign = true

[gpg]
	format = ssh

[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"

[alias]
	a = add
	b = branch
	bd = branch -d
	bD = branch -D
	bn = rev-parse --abbrev-ref HEAD
	br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
	c = commit
	cm = commit -m
	cam = commit -am
	cb = checkout -b
	clb = !git branch --merged $(git mb) | grep -v \"master\" | grep -v \"main\" | grep -v \"develop\" | grep -v \"staging\" | xargs git branch -D
	co = checkout
	cp = cherry-pick
	d = diff
	f = fetch
	fp = fetch --prune
	fix = commit --amend --no-edit
	im = "!f() { git is-merged $1 $(git bn); }; f"
	l = log --date=local
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	mb = !git branch -l master main | sed 's/^* //'
	root = rev-parse --show-toplevel
	s = switch -q
	st = status -sb
	sh = show
	sz = "!f() { if [[ -z $1 ]]; then git branch | fzf --reverse | sed 's/^* //' | cut -f1 | xargs -n1 git switch -q; else git switch -q $1; fi; }; f"
	undo = reset --soft HEAD~1
	who = shortlog -sn
	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	list-ignored = !git ls-files -v | grep "^[[:lower:]]" | cut -c 3-
	current-branch = bn
	nfeat = "!f() { git checkout -b feature/$1 $(git mb); }; f"
	nfix = "!f() { git checkout -b bugfix/$1 $(git mb); }; f"

[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true

[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true

[mergetool]
	keepBackup = false
